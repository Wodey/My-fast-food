{"version":3,"sources":["components/Navigation.js","components/Menu.js","components/Map.js","components/Gallery.js","components/Footer.js","components/Bienvenidos.js","App.js","serviceWorker.js","index.js"],"names":["useState","transformNav","setTransformNav","onScrollNav","window","scrollY","useEffect","addEventListener","removeEventListener","className","href","onClick","e","preventDefault","scroll","top","left","behavior","src","alt","table","body","number","name","transformMenu","setTransformMenu","onScrollMenu","id","map","t","c","target","rel","counter","setCounter","transition","setTransition","style","Navigation","Bienvenidos","Menu","Gallery","Map","Footer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1bd06d87.chunk.js","sourcesContent":["import React,{useEffect,useState} from 'react';\r\n\r\nexport default () => {\r\n  const [transformNav, setTransformNav] = useState(false);\r\n\r\n  const onScrollNav = () => {\r\n    if(window.scrollY > 0) {\r\n      setTransformNav(true);\r\n    } else {\r\n      setTransformNav(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", onScrollNav);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScrollNav);\r\n    }\r\n  })\r\n  return (\r\n    <div className={`navigation ${transformNav ? \"navigation-transform\" : \"\"}`}>\r\n      <a className=\"navigation-child\" href=\"#bienvenidos\" onClick={(e) => {\r\n        e.preventDefault();\r\n        window.scroll({\r\n          top: 0,\r\n          left: 0,\r\n          behavior: 'smooth'\r\n        })\r\n      }}>Bienvenidos</a>\r\n      <a className=\"navigation-child\" href=\"#menu\"  onClick={(e) => {\r\n        e.preventDefault();\r\n        window.scroll({\r\n          top: 1680,\r\n          left: 0,\r\n          behavior: 'smooth'\r\n        })\r\n      }}>Menu</a>\r\n      <a className=\"navigation-child\" href=\"/\"><img src=\"/logo.svg\" alt=\"logo\" className=\"navigation-logo\"/></a>\r\n      <a className=\"navigation-child\" href=\"#contact\"  onClick={(e) => {\r\n        e.preventDefault();\r\n        window.scroll({\r\n          top: 7600,\r\n          left: 0,\r\n          behavior: 'smooth'\r\n        })\r\n      }}>Contact</a>\r\n      <span className=\"navigation-child\">We're open now</span>\r\n    </div>\r\n  );\r\n};\r\n","import React,{useEffect, useState} from 'react';\r\n\r\n\r\nconst table = [\r\n  {\r\n       body: [\r\n      \"Burrito 130\",\r\n      \"Tacos (3) 125\",\r\n      \"Burrito Bowl 130\",\r\n      \"Quesadilla 125\",\r\n      \"Nachos 125\"\r\n      ],\r\n      number: 1,\r\n      name: \"Choose your style:\"\r\n  },\r\n  {\r\n      body: [\r\n      \"Roasted Chicken\",\r\n      \"Beef (+15,-)\",\r\n      \"Carnoso Beef\",\r\n      \"Pulled Pork\",\r\n      \"Vegetarian\",\r\n      \"White rice\",\r\n      \"Black beans\"\r\n      ],\r\n      number: 2,\r\n      name: \"Choose your filling\"\r\n  },\r\n  {\r\n      body: [\r\n      \"Pico de Gallo\",\r\n      \"Lettuce\",\r\n      \"Cheese\",\r\n      \"Cream chipotle\"\r\n      ],\r\n      number: 3,\r\n      name: \"Choose your toppings\"\r\n  },\r\n  {\r\n      body: [\r\n      \"Red salsa (mild)\",\r\n      \"Green salsa (medium plus)\",\r\n      \"Chipotle salsa (spicy)\",\r\n      \"Habanero (super spicy)\"\r\n      ],\r\n      number: 4,\r\n      name: \"Choose your salsa\"\r\n  }\r\n];\r\n\r\nexport default () => {\r\n  const [transformMenu, setTransformMenu] = useState();\r\n\r\n  const onScrollMenu = () => {\r\n    if(window.scrollY > 2100) {\r\n      setTransformMenu(true);\r\n    } else {\r\n      setTransformMenu(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", onScrollMenu);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScrollMenu);\r\n    }\r\n  })\r\n  return (\r\n    <div className={`menu ${transformMenu ? \"menu-transform\" : \"\"}`} id=\"menu\">\r\n      <span>Menu</span>\r\n      {\r\n        table.map(t => <div className={`menu-table menu-table-${t.number}`}>\r\n          <div className=\"menu-table-header\">\r\n            <span>{t.number}</span>\r\n            <span>{t.name}</span>\r\n          </div>\r\n          <div className=\"menu-table-body\">\r\n            {t.body.map(c => <span className=\"menu-table-body-child\">{c}</span>)}\r\n          </div>\r\n        </div>)\r\n      }\r\n      <button>Fodora</button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default () => (\r\n  <div className=\"map\" id=\"contact\">\r\n    <span>Where you can find us?</span>\r\n    <div className=\"map-address\">\r\n      <img src=\"/summertime.svg\" alt=\"sun\" />\r\n      <span>VISIT US</span>\r\n      <span>Byporten Shopping, Jernbanetorget 6, 0154 Oslo</span>\r\n    </div>\r\n    <a className=\"map-interactive\" href=\"https://www.google.no/maps/place/Skovveien+3,+0257+Oslo,+Norway/@59.9157394,10.7138466,17z/data=!3m1!4b1!4m5!3m4!1s0x46416dd4b7384661:0xea5d599031a0ac9!8m2!3d59.9157394!4d10.7160353?hl=en\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n      <img src=\"/map.png\" alt=\"map\" />\r\n    </a>\r\n    <div className=\"map-skedule\">\r\n      <span>OPENING HOURS</span>\r\n      <span>Mandag - Torsdag 10:00-21:00</span>\r\n      <span>Fredag – Lørdag 10:00 - 21:00</span>\r\n      <span>Søndag closed</span>\r\n    </div>\r\n  </div>\r\n);\r\n","import React,{useState} from 'react';\r\n\r\nexport default () => {\r\n    const [counter, setCounter] = useState(0);\r\n    const [transition, setTransition] = useState(.6);\r\n    const handleLeft = () => {\r\n      if(counter <= 0) {\r\n        setTransition(1.2);\r\n        setCounter(5);\r\n        return;\r\n      }\r\n      setTransition(.6);\r\n      setCounter(counter - 1);\r\n    };\r\n\r\n    const handleRight = () => {\r\n      if(counter >= 5) {\r\n        setTransition(1.2);\r\n        setCounter(0);\r\n        return;\r\n      }\r\n      setTransition(.6);\r\n      setCounter(counter + 1);\r\n    };\r\n    return (\r\n      <div className=\"gallery\">\r\n        <img className=\"gallery-btn-left gallery-btn\" src=\"/left.svg\" alt=\"left button\" onClick={handleLeft} />\r\n        <div className=\"gallery-carousel\" style={{\"transform\": `translateX(${-counter * 100}%)`,\r\n                                                  \"transition\": `${transition}s`}} >\r\n          <img src=\"/3.jpg\" alt=\"carousel element\" />\r\n          <img src=\"/4.jpg\" alt=\"carousel element\" />\r\n          <img src=\"/5.jpg\" alt=\"carousel element\" />\r\n          <img src=\"/6.jpg\" alt=\"carousel element\" />\r\n          <img src=\"/7.jpg\" alt=\"carousel element\"/>\r\n          <img src=\"/8.jpg\" alt=\"carousel element\"/>\r\n        </div>\r\n        <img className=\"gallery-btn-right gallery-btn\" src=\"/right.svg\" alt=\"right button\" onClick={handleRight} />\r\n      </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport default () => (\r\n  <div className=\"footer\">\r\n    <span>post@elburro.no</span>\r\n    <span>|</span>\r\n    <span>949 75 726</span>\r\n    <span>|</span>\r\n    <a href=\"https://www.facebook.com/pages/El-Burro/428840153957900\" target=\"_blank\" rel=\"noopener noreferrer\">facebook</a>\r\n    <span>|</span>\r\n    <a href=\"https://www.instagram.com/elburro_oslo/\" target=\"_blank\" rel=\"noopener noreferrer\">instagram</a>\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nexport default () => (\r\n  <div className=\"bienvenidos\" id=\"bienvenidos\">\r\n    <div className=\"bienvenidos-blog1\"><span>Mexican streetfood</span></div>\r\n    <div className=\"bienvenidos-blog2\">\r\n      <h1>¡Bienvenidos!</h1>\r\n      <span>El Burro is a casual burreria that serves TexMex at Byporten Shopping,\r\n      Oslo. At El Burro passion is the most important ingredient, and we\r\n      bring you the beauty of Mexican flavours in every bite.\r\n      </span>\r\n    </div>\r\n    <div className=\"bienvenidos-blog3\"><span>If you like Mexican streetfood, you will love El Burro.</span></div>\r\n    <div className=\"bienvenidos-blog4\">\r\n      <img src=\"/1.jpg\" alt=\"people eat burittos\"/>\r\n      <img src=\"/2.jpg\" alt=\"glom shop name in dark\"/>\r\n    </div>\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport Navigation from './components/Navigation';\r\nimport Menu from './components/Menu';\r\nimport Map from './components/Map';\r\nimport Gallery from \"./components/Gallery\";\r\nimport Footer from './components/Footer';\r\nimport Bienvenidos from \"./components/Bienvenidos\";\r\n\r\nimport \"./App.scss\";\r\n\r\nexport default () => {\r\n  return <>\r\n    <header>\r\n      <Navigation />\r\n    </header>\r\n    <main>\r\n      <Bienvenidos />\r\n      <Menu />\r\n      <Gallery />\r\n      <Map />\r\n    </main>\r\n    <footer>\r\n      <Footer />\r\n    </footer>\r\n  </>\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}